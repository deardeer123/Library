<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="libraryHomeMapper">
    <resultMap id="calendar" type="com.green.Library.library.libraryhome.vo.CalendarVO">
        <result column="CALENDAR_TITLE" property="title" />
        <result column="CALENDAR_START" property="start" />
        <result column="CALENDAR_COLOR" property="color" />
        <result column="CALENDAR_URL" property="url" />
    </resultMap>

    <resultMap id="memo" type="com.green.Library.library.libraryhome.vo.MemoVO">
        <id column="ID" property="id"/>
        <result column="MEMO_TITLE" property="memoTitle"/>
        <result column="MEMO_CONTENT" property="memoContent"/>
        <result column="MEMO_WRITER" property="memoWriter"/>
        <result column="MEMO_DATE" property="date"/>
    </resultMap>

<!--    캘린터 검색-->
    <select id="selectCalendarList" resultMap="calendar">
        SELECT
        CALENDAR_TITLE ,
        CALENDAR_START ,
        CALENDAR_COLOR ,
        CALENDAR_URL
        FROM
        CALENDAR
    </select>
<!-- 캘린더 추가 -->
    <insert id="insertCalendar">
        INSERT INTO CALENDAR(
            CALENDAR_TITLE ,
            CALENDAR_START ,
            CALENDAR_COLOR ,
            CALENDAR_URL
        )
        values(
            #{title} ,
            #{start} ,
            #{color} ,
            #{url}
        )
    </insert>
<!--캘린더 삭제-->
    <delete id="deleteCalendar">
        DELETE FROM calendar
        WHERE calendar_title = #{title}
    </delete>

    <insert id="insertMemo">
        INSERT INTO MEMO
        (
        MEMO_TITLE ,
        MEMO_CONTENT ,
        MEMO_WRITER
        )VALUES(
        #{memoTitle} ,
        #{memoContent} ,
        #{memoWriter})
    </insert>

<!--    메모 조회 (3개만) -->
    <select id="selectMemoList3" resultMap="memo">
        SELECT *
        FROM MEMO
        ORDER BY id DESC
        LIMIT 3
    </select>

<!--    메모 총 갯수-->
    <select id="selectMemoCount" resultType="int">
        select count(*)
        from memo
        where 1= 1
        <if test='searchValue != null and !searchValue.equals("null") and !searchValue.equals("")'>
            AND ${searchType} LIKE CONCAT('%', #{searchValue} , '%')
        </if>
    </select>

<!--    메모조회 다-->
    <select id="selectMemoList" resultMap="memo">
        SELECT *
        FROM MEMO
        WHERE 1 = 1
        <if test='searchValue != null and !searchValue.equals("null") and !searchValue.equals("")'>
            AND ${searchType} LIKE CONCAT('%', #{searchValue} , '%')
        </if>
        ORDER BY id DESC
        LIMIT ${displayDataCnt} OFFSET ${displayDataCnt * (nowPage - 1)}
    </select>

    <select id="selectMemoInfo" resultMap="memo">
        select *
        from memo
        where id = #{id}
    </select>


    <delete id="deleteMemo">
        delete from memo
        where id =${id}
    </delete>

<!--    묻고 답하기 갯수-->
    <select id="askBoardCount" resultType="int">
        SELECT COUNT(*)
        FROM board INNER JOIN ask_and_answer_board
        ON board.BOARD_NUM = ask_and_answer_board.BOARD_NUM
        WHERE is_answer_board = 'N' and ask_and_answer_board_num NOT IN
        (SELECT if_answer_board_num
        FROM ask_and_answer_board
        WHERE is_answer_board = 'Y')

    </select>
<!--   묻고 답하기 게시물 정확히는 답변안한 게시물-->
    <select id="notAskBoard" resultMap="boardMapper.board">
        SELECT board.BOARD_NUM , board.BOARD_TITLE, user_name
        FROM board INNER JOIN ask_and_answer_board
        ON board.BOARD_NUM = ask_and_answer_board.BOARD_NUM
        INNER JOIN users
        ON board.USER_CODE = users.USER_CODE
        WHERE is_answer_board = 'N' and ask_and_answer_board_num not IN
        (SELECT if_answer_board_num
        FROM ask_and_answer_board
        WHERE is_answer_board = 'Y')
        ORDER BY board.board_num desc
        LIMIT 5;
    </select>

    <!-- 메인화면에 뿌릴 예약 정보 최신순 5개 -->
    <select id="selectMainR" resultMap="bnrMapper.bookReserve">
        SELECT RESERVE_CODE
            , BOOK_TITLE
            , RESERVE_DATE
            , USER_NAME
        FROM BOOK_RESERVATION BR
        LEFT JOIN BOOK
        ON BR.BOOK_CODE = BOOK.BOOK_CODE
        LEFT JOIN USERS
        ON BR.USER_CODE = USERS.USER_CODE
        ORDER BY RESERVE_CODE DESC
        LIMIT 5
    </select>

    <!-- 오늘 대출 도서 -->
    <select id="selectNowB" resultType="int">
        SELECT COUNT(BORROW_CODE)
        FROM book_bnr
        WHERE BORROW_DATE = DATE_FORMAT(NOW(), '%Y%m%d')
    </select>

    <!-- 오늘 반납 도서 -->
    <select id="selectNowR" resultType="int">
        SELECT COUNT(EX_RETURN_DATE)
        FROM book_bnr
        WHERE EX_RETURN_DATE = DATE_FORMAT(NOW(), '%Y%m%d')
        AND RETURN_YN = 'N'
    </select>

    <!-- 미납 반납 도서 -->
    <select id="selectNowO" resultType="int">
        SELECT COUNT(BORROW_CODE)
        FROM book_bnr
        WHERE RETURN_YN = 'N'
        AND EX_RETURN_DATE &lt; DATE_FORMAT(NOW(), '%Y%m%d')
    </select>

</mapper>































