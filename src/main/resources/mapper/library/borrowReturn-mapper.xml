<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="bnrMapper">

    <resultMap id="bookBNR" type="com.green.Library.library.borrowReturn.vo.BookBNRVO">
        <id          column="BORROW_CODE"         property="borrowCode"/>
        <result      column="BORROW_DATE"         property="borrowDate"/>
        <result      column="RETURN_YN"           property="returnYN"/>
        <result      column="EX_RETURN_DATE"      property="exReturnDate"/>
        <result      column="RETURN_DATE"         property="returnDate"/>
        <result      column="USER_CODE"           property="userCode"/>
        <result      column="BOOK_CODE"           property="bookCode"/>
        <association property="libraryBookVO"     resultMap="libraryBookMapper.libraryBook"/>
    </resultMap>

    <resultMap id="bookReserve" type="com.green.Library.library.borrowReturn.vo.BookReservationVO">
        <id          column="RESERVE_CODE"        property="reserveCode"/>
        <result      column="USER_CODE"           property="userCode"/>
        <result      column="BOOK_CODE"           property="bookCode"/>
        <result      column="RESERVE_DATE"        property="reserveDate"/>
        <result      column="RESERVE_CANCEL"      property="reserveCancel"/>
        <result      column="RESERVE_STATUS"      property="reserveStatus"/>
        <result      column="RESERVE_CNT"         property="reserveCnt"/>
        <association property="memberVO"          resultMap="memberMapper.users"/>
        <association property="libraryBookVO"     resultMap="libraryBookMapper.libraryBook"/>
    </resultMap>

<!-- ///////////// 이용자 정보 조회 및 수정 /////////////// -->

    <!-- 이용자의 대출, 반납, 예약 정보 조회-->
    <select id="selectBorrowInfo" resultMap="memberMapper.users">
        SELECT CARD_NUM
        , USER_INTRO
        , U.USER_CODE
        , USER_NAME
        , USER_TEL
        , POST_CODE
        , USER_ADDR
        , ADDR_DETAIL
        , BORROW_CODE
        , BORROW_DATE
        , RETURN_YN
        , EX_RETURN_DATE
        , RETURN_DATE
        , BBR.BOOK_CODE
        , BOOK_TITLE
        , BOOK_CATE_CODE
        , BOOK_MID_CATE_CODE
        , BOOK_INFO_ATTACHED_FILE_NAME
        , RESERVE_CODE
        , RESERVE_DATE
        FROM USERS U
        LEFT JOIN BOOK_BNR AS BBR
        ON U.USER_CODE = BBR.USER_CODE
        LEFT JOIN BOOK_RESERVATION AS BR
        ON U.USER_CODE = BR.USER_CODE
        LEFT JOIN BOOK AS B
        ON BBR.BOOK_CODE = B.BOOK_CODE
        LEFT JOIN BOOK_INFO AS BI
        ON BBR.BOOK_CODE = BI.BOOK_CODE
        WHERE U.CARD_NUM = #{cardNum}
        ORDER BY BORROW_DATE DESC
    </select>

    <!-- 이용자 소개 변경 -->
    <update id="updateUserIntro">
        UPDATE USERS
        SET
            USER_INTRO = #{userIntro}
        WHERE USER_CODE = #{userCode}
    </update>

    <!-- 이용자 카드번호 조회 -->
    <select id="selectCardNum" resultMap="int">
        SELECT
            CARD_NUM
        FROM USERS
        WHERE USER_CODE = #{userCode}
    </select>

<!-- ///////////////////// 대출 ///////////////////////// -->

    <!-- 데이터베이스에 존재하는 책인지 확인 -->
    <select id="isCorrectBookCode" resultType="String">
        SELECT
            BOOK_CODE
        FROM BOOK
        WHERE BOOK_CODE = #{bookCode}
    </select>

    <!-- 대출 진행 시 insert -->
    <insert id="insertBorrow">
        INSERT INTO BOOK_BNR (
            USER_CODE
            , BOOK_CODE
            , BORROW_DATE
            , EX_RETURN_DATE
        ) VALUES (
            #{userCode}
            , #{bookCode}
            , #{borrowDate}
            , DATE_ADD(#{borrowDate}, INTERVAL +14 DAY)
        )
    </insert>

    <!-- bookInfo update -->
    <update id="updateBookInfo">
        UPDATE BOOK_INFO
        SET
            BOOK_BORROW_AVAILABLE = 'N'
            , BOOK_BORROW_CNT = BOOK_BORROW_CNT + 1
        WHERE BOOK_CODE = #{bookCode}
    </update>

    <!-- 책 코드 찍기 전 유저 카드넘버 조회 -->
    <select id="selectUserCode" resultType="int">
        SELECT USER_CODE
        FROM USERS
        WHERE CARD_NUM = #{cardNum}
    </select>

<!-- ///////////////////////////////////////////////////////////   -->



<!-- //////////////////////// 반납 //////////////////////////// -->

    <!-- 책이 대출되어 있는 지 확인 이게 있어야 인풋 태그에 들어오는 책 코드가 대출인지 반납인지 알 수 있음 -->
    <select id="selectBookAvailable" resultType="String">
        SELECT BOOK_BORROW_AVAILABLE
        FROM BOOK_INFO
        WHERE BOOK_CODE = #{bookCode}
    </select>

    <!-- bookInfo update -->
    <update id="updateReturnBookInfo">
        UPDATE BOOK_INFO
        SET
            BOOK_BORROW_AVAILABLE = 'Y'
        WHERE BOOK_CODE = #{bookCode}
    </update>

    <!-- 반납 진행 시 update -->
    <update id="updateReturnInfo">
        UPDATE BOOK_BNR
        SET
            RETURN_YN = 'Y'
            , RETURN_DATE =
                CASE
                    WHEN #{returnDate} &lt; NOW() THEN #{returnDate}
                    ELSE NOW()
                END
        WHERE BOOK_CODE = #{bookCode}
    </update>

<!-- ////////////////////////////////////////////////////// -->



<!-- //////////////////////// 예약 //////////////////////////// -->

    <!-- 예약내역 확인 -->
    <select id="selectReserve" resultMap="bnrMapper.bookReserve">
        SELECT RESERVE_CODE
            , RESERVE_STATUS
            , CARD_NUM
            , BR.USER_CODE
            , BR.BOOK_CODE
            , USER_NAME
            , CARD_STATUS
            , USER_TEL
            , BOOK_TITLE
            , RESERVE_DATE
            , RESERVE_CANCEL
            , RESERVE_CNT
        FROM BOOK_RESERVATION AS BR
        LEFT JOIN USERS AS U
        ON BR.USER_CODE = U.USER_CODE
        LEFT JOIN BOOK AS B
        ON BR.BOOK_CODE = B.BOOK_CODE
        WHERE 1 = 1
        <if test='userName != null and !userName.equals("")'>
            AND USER_NAME = #{userName}
        </if>
        <if test='bookTitle != null and !bookTitle.equals("")'>
            AND BOOK_TITLE = #{bookTitle}
        </if>
        <if test='cardNum != 0 and !cardNum.equals("")'>
            AND CARD_NUM = ${cardNum}
        </if>
        <if test='bookCode1 != null and !bookCode1.equals("") and bookCode2 == null and bookCode2.equals("")'>
            AND BOOK_CODE BETWEEN #{bookCode1} AND (SELECT MAX(BOOK_CODE) FROM BOOK)
        </if>
        <if test='bookCode2 != null and !bookCode2.equals("") and bookCode1 == null and bookCode1.equals("")'>
            AND BOOK_CODE BETWEEN (SELECT MIN(BOOK_CODE) FROM BOOK) AND #{bookCode2}
        </if>
        <if test='bookCode1 != null and !bookCode1.equals("") and bookCode2 != null and !bookCode2.equals("")'>
            AND BOOK_CODE BETWEEN #{bookCode1} AND #{bookCode2}
        </if>
        <if test='reserveDate1 != null and !reserveDate.equals("") and reserveDate2 == null and reserveDate2.equals("")'>
            AND RESERVE_DATE BETWEEN #{reserveDate1} AND NOW()
        </if>
        <if test='reserveDate2 != null and !reserveDate2.equals("") and reserveDate1 == null and reserveDate1.equals("")'>
            AND RESERVE_DATE BETWEEN CONCAT(YEAR(CURDATE()), '-01-01') AND #{reserveDate2}
        </if>
        <if test='reserveDate1 != null and !reserveDate1.equals("") and reserveDate2 != null and !reserveDate2.equals("")'>
            AND RESERVE_DATE BETWEEN #{reserveDate1} AND #{reserveDate2}
        </if>

        <!-- 여기서부터 예외 빠바방 -->
        <if test='cancelReserveDate1 != null and !cancelReserveDate1.equals("") and cancelReserveDate2 == null and cancelReserveDate2.equals("")'>
            AND RESERVE_CANCEL BETWEEN #{cancelReserveDate1} AND NOW()
        </if>
        <if test='cancelReserveDate2 != null and !cancelReserveDate2.equals("") and cancelReserveDate1 == null and cancelReserveDate1.equals("")'>
            AND RESERVE_CANCEL BETWEEN CONCAT(YEAR(CURDATE()), '-01-01') AND #{cancelReserveDate2}
        </if>
        <if test='cancelReserveDate1 != null and !cancelReserveDate1.equals("") and cancelReserveDate2 != null and !cancelReserveDate2.equals("")'>
            AND RESERVE_CANCEL BETWEEN #{cancelReserveDate1} AND #{cancelReserveDate2}
        </if>
    </select>



<!-- ////////////////////////////////////////////////////// -->

</mapper>
