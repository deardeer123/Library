<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="regAndViewMapper">

<!--    책 정보 끌고오기-->
    <select id="selectBookList" resultMap="libraryBookMapper.libraryBook">
        SELECT
        BOOK_CODE ,
        BOOK_TITLE ,
        BOOK_WRITER ,
        BOOK_PUB ,
        BOOK_YEAR
        FROM
        book
    </select>
<!--    책 하나 찾기-->
    <select id="selectOneBook" resultMap="libraryBookMapper.libraryBook">
        SELECT
            BOOK.BOOK_CODE,
            BOOK.BOOK_TITLE,
            BOOK.BOOK_WRITER,
            BOOK.BOOK_PUB,
            BOOK.BOOK_YEAR,
            book_info.BOOK_INFO_ORIGIN_FILE_NAME,
            book_info.BOOK_INFO_ATTACHED_FILE_NAME,
            book_info.BOOK_INTRO,
            book_info.BOOK_CATE_CODE,
            book_info.BOOK_MID_CATE_CODE
        FROM
            book LEFT OUTER JOIN book_info
        ON
            book.BOOK_CODE = book_info.BOOK_CODE
        WHERE
            book.BOOK_CODE = #{bookCode};
    </select>
<!--    책 업데이트-->
    <update id="updateBook">
        UPDATE book
        set
            BOOK_TITLE = #{bookTitle},
            BOOK_WRITER = #{bookWriter} ,
            BOOK_PUB = #{bookPub} ,
            BOOK_YEAR = #{bookYear}
        WHERE
            BOOK_CODE = #{bookCode}
    </update>

<!--    책 상세정보 업데이트-->
    <update id="updateBookInfo">
        UPDATE book_info
        SET
            BOOK_INFO_ATTACHED_FILE_NAME = #{libraryBookInfoVO.bookInfoAttachedFileName} ,
            BOOK_INFO_ORIGIN_FILE_NAME = #{libraryBookInfoVO.bookInfoOriginFileName} ,
            BOOK_INTRO = #{libraryBookInfoVO.bookIntro} ,
            BOOK_CATE_CODE = #{libraryBookInfoVO.bookCateCode} ,
            BOOK_MID_CATE_CODE = #{libraryBookInfoVO.bookMidCateCode}
        WHERE
            BOOK_CODE = #{libraryBookInfoVO.bookCode}
    </update>

<!--    책 삭제하기전 처음할거-->
    <delete id="DeleteBookOne">
        DELETE FROM book_info
        WHERE book_code = #{bookCode}
    </delete>
<!-- 두번째로 할거-->
    <delete id="DeleteBookTwo">
        DELETE FROM book
        WHERE book_code = #{bookCode}
    </delete>

<!--    책 갯수-->
    <select id="selectBookCnt" resultType="int">
        select count(*)
        from book
        where
        1 = 1
        <if test='searchValue != null and !searchValue.equals("")'>
            and ${searchType} LIKE CONCAT('%',#{searchValue},'%')
        </if>
    </select>

<!--    검색기능-->
    <select id="searchBookList" resultMap="libraryBookMapper.libraryBook">
        SELECT
            BOOK_CODE ,
            BOOK_TITLE ,
            BOOK_WRITER ,
            BOOK_PUB ,
            BOOK_YEAR
        FROM
            BOOK
        WHERE
            1 = 1
            <if test='searchValue != null and !searchValue.equals("")'>
                AND ${searchType} LIKE CONCAT('%',#{searchValue},'%')
            </if>
        ORDER BY book_code
        LIMIT ${displayDataCnt} offset ${(displayDataCnt) * (nowPage - 1)}
    </select>


<!--    프로시져 쓸 줄 몰라서 쓴 초기화 쿼리문임 가능하면 건드지 마십쇼-->
    <insert id="bookInfoInit">
        INSERT INTO book_info(
        BOOK_INFO_ATTACHED_FILE_NAME ,
        BOOK_INFO_ORIGIN_FILE_NAME ,
        BOOK_INTRO ,
        BOOK_CATE_CODE ,
        BOOK_CODE)
        VALUE
        <foreach collection="list" item="item" separator=",">
            (
            'book_character_smile.png',
            'book_character_smile.png' ,
            '초기화',
            1,
            CONCAT('GR',LPAD(#{item},10,'0'))
            )
        </foreach>
    </insert>
</mapper>































