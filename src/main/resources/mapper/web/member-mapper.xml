<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="memberMapper">
    <resultMap id="users" type="com.green.Library.web.member.vo.MemberVO">
        <id property="userCode" column="USER_CODE"/>
        <result property="userId" column="USER_ID"/>
        <result property="userPw" column="USER_PW"/>
        <result property="userName" column="USER_NAME"/>
        <result property="userTel" column="USER_TEL"/>
        <result property="postCode" column="POST_CODE"/>
        <result property="userAddr" column="USER_ADDR"/>
        <result property="addrDetail" column="ADDR_DETAIL"/>
        <result property="gender" column="GENDER"/>
        <result property="email" column="EMAIL"/>
        <result property="isAdmin" column="IS_ADMIN"/>
        <result property="cardNum" column="CARD_NUM"/>
        <result property="publishDate" column="PUBLISH_DATE"/>
        <result property="userIntro" column="USER_INTRO"/>
        <result property="cardStatus" column="CARD_STATUS"/>
        <result property="recentDate" column="RECENT_DATE"/>
        <result property="borrowCnt" column="BORROW_CNT"/>
        <result property="overdueCnt" column="OVERDUE_CNT"/>
        <association property="applyVO" resultMap="apply"/>
        <collection property="bookBorrowList" resultMap="bnrMapper.bookBNR"/>
        <collection property="bookReservationList" resultMap="bnrMapper.bookReserve"/>
    </resultMap>
    <resultMap id="apply" type="com.green.Library.web.member.vo.ApplyVO">
        <id property="applyNum" column="APPLY_NUM"/>
        <result property="applyDate" column="APPLY_DATE"/>
        <result property="userCode" column="USER_CODE"/>
        <result property="boardNum" column="BOARD_NUM"/>
        <result property="applyStatus" column="APPLY_STATUS"/>
        <result property="confirm" column="CONFIRM"/>
    </resultMap>

    <insert id="insertMember">
        INSERT INTO USERS(
            USER_ID
            , USER_PW
            , USER_TEL
            , USER_NAME
            , POST_CODE
            , USER_ADDR
            , ADDR_DETAIL
            , GENDER
            , EMAIL
        )VALUES(
            #{userId}
            ,#{userPw}
            ,#{userTel}
            ,#{userName}
            ,#{postCode}
            ,#{userAddr}
            ,#{addrDetail}
            ,#{gender}
            ,#{email}
        )
    </insert>

    <select id="login" resultMap="users">
        SELECT
            USER_ID
            ,USER_PW
            ,USER_NAME
            ,USER_CODE
            ,IS_ADMIN
        FROM USERS
        WHERE USER_ID = #{userId}
    </select>

    <insert id="apply">
        INSERT INTO APPLY(
            APPLY_DATE
            ,USER_CODE
            ,BOARD_NUM
        )VALUES(
            #{applyDate}
            ,#{userCode}
            ,#{boardNum}
        )
    </insert>
    <select id="applyList" resultMap="users">
        SELECT
            DATE_FORMAT(A.APPLY_DATE, '%Y-%m-%d') AS APPLY_DATE
            ,A.USER_CODE
            ,BOARD_NUM
            ,USER_NAME
            ,APPLY_STATUS
        FROM USERS AS U
        INNER JOIN APPLY AS A
        ON A.USER_CODE = U.USER_CODE
    </select>

    <select id="selectMemberInfoToUserCode" resultMap="users">
        SELECT
        USER_CODE ,
        USER_ID ,
        USER_NAME,
        USER_TEL ,
        IS_ADMIN
        FROM
        users
        where
        user_code = #{userCode};
    </select>

    <select id="selectApplyUser" resultMap="apply">
        SELECT
            A.APPLY_DATE
            ,A.APPLY_STATUS
        FROM APPLY AS A
        INNER JOIN USERS AS U
        ON A.USER_CODE = U.USER_CODE
        WHERE A.USER_CODE = #{userCode}
        AND CONFIRM = 'N'
        AND APPLY_STATUS ='승인완료'
    </select>

    <select id="applyUserBoardList" resultMap="boardMapper.board">
        SELECT
        PLUS_CODE
        ,B.BOARD_NUM
        ,BOARD_TITLE
        , BOARD_TYPE
        ,TEACHER
        ,TARGET
        , DATE_FORMAT(OPEN_DATE, '%Y-%m-%d') AS OPEN_DATE
        , DATE_FORMAT(CLOSE_DATE, '%Y-%m-%d') AS CLOSE_DATE
        , DATE_FORMAT(TO_DATE, '%Y-%m-%d') AS TO_DATE
        , DATE_FORMAT(FROM_DATE, '%Y-%m-%d') AS FROM_DATE
        ,PERSONNEL
        ,MAXIMUM_PERSON
        ,EVENT_STATUS
        ,DATE_FORMAT(A.APPLY_DATE, '%Y-%m-%d') AS APPLY_DATE
        ,A.USER_CODE
        ,APPLY_STATUS
        ,U.USER_NAME
        ,A.CONFIRM
        FROM BOARD AS B
        INNER JOIN BOARD_PLUS AS P
        ON B.BOARD_NUM = P.BOARD_NUM
        INNER JOIN apply AS A
        ON B.BOARD_NUM = A.BOARD_NUM
        INNER JOIN USERS AS U
        ON A.USER_CODE = U.USER_CODE
        WHERE A.USER_CODE = #{userCode}
    </select>

    <delete id="deleteApply">
        DELETE
        FROM APPLY
        WHERE BOARD_NUM = #{boardNum}
    </delete>

    <update id="CF">
        UPDATE APPLY
        SET CONFIRM = 'Y'
        WHERE BOARD_NUM = #{boardNum}
    </update>

    <select id="myPageUserInfo" resultMap="users">
        SELECT
            USER_CODE
            ,USER_NAME
            ,USER_ID
            ,USER_PW
            ,USER_TEL
            ,USER_ADDR
            ,POST_CODE
            ,ADDR_DETAIL
            ,EMAIL
        FROM USERS
        WHERE USER_CODE = #{userCode}
    </select>

    <update id="updateUserInfo">
        UPDATE USERS
        SET
            USER_TEL = #{userTel}
            ,USER_ADDR = #{userAddr}
            ,POST_CODE = #{postCode}
            ,ADDR_DETAIL = #{addrDetail}
            ,EMAIL = #{email}
        WHERE USER_CODE = #{userCode}
    </update>
    <update id="updateUserPw">
        UPDATE USERS
        SET
        USER_PW = #{userPw}
        WHERE USER_CODE = #{userCode}
    </update>

    <select id="findUser" resultMap="users">
        SELECT
        USER_ID
        ,USER_NAME
        ,USER_PW
        ,email
        FROM USERS
        WHERE USER_TEL = #{userTel}
        AND USER_NAME = #{userName}
    </select>

    <!-- ////////////////////////// 예약 기능 ////////////////////////////////   -->

    <!-- 예약 조회 -->
    <select id="selectMyReservation" resultMap="bnrMapper.bookReserve">
        SELECT BR.USER_CODE
        , BR.BOOK_CODE
        , BOOK_INFO_ATTACHED_FILE_NAME
        , BOOK_TITLE
        , BOOK_WRITER
        , RESERVE_DATE
        , RESERVE_CANCEL
        , RESERVE_STATUS
        FROM BOOK_RESERVATION BR
        LEFT JOIN BOOK B
        ON BR.BOOK_CODE = B.BOOK_CODE
        LEFT JOIN BOOK_INFO BI
        ON BR.BOOK_CODE = BI.BOOK_CODE
        WHERE USER_CODE = #{userCode}
        ORDER BY RESERVE_DATE DESC
    </select>

    <!-- 예약 취소(본인) -->
    <update id="updateSelfCancel">
        UPDATE BOOK_RESERVATION
        SET
            RESERVE_CANCEL = NOW()
            , RESERVE_STATUS = '취소'
        WHERE USER_CODE = #{userCode}
        AND BOOK_CODE = #{bookCode}
    </update>

    <!-- 예약 취소(자동) -->
    <update id="updateAutoCancel">
        UPDATE BOOK_RESERVATION
        SET
            RESERVE_CANCEL = NOW()
            , RESERVE_STATUS = '취소'
        WHERE BOOK_CODE = #{bookCode}
        AND USER_CODE = #{userCode}
        AND RESERVE_CANCEL &lt; NOW()
    </update>

    <!-- ///////////////////////////////////////////////////////////////// -->

</mapper>































