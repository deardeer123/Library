<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="findBookMapper">
    <resultMap id="findBook" type="com.green.Library.web.findBook.vo.FindBookVO">
        <result column="BOOK_CODE" property="bookCode" />
        <result column="BOOK_TITLE" property="bookTitle" />
        <result column="BOOK_WRITER" property="bookWriter" />
        <result column="BOOK_PUB" property="bookPub" />
        <result column="BOOK_YEAR" property="bookYear" />
        <result column="BOOK_BORROW_AVAILABLE" property="bookBorrowAvailable" />
        <result column="book_intro" property="bookIntro" />
        <result column="BOOK_INFO_ATTACHED_FILE_NAME" property="bookInfoAttachedFileName" />
        <result column="BOOK_CATE_NAME" property="bookCateName" />
        <result column="BOOK_MID_CATE_NAME" property="bookMidCateName" />
        <result column="BOOK_REGDATE" property="bookRegDate" />
        <result column="ID" property="id" />
        <result column="USER_TYPE" property="userType" />
    </resultMap>
<!--    책 검색-->
    <select id="findBookList" resultMap="findBook">
        select *
        from find_book_view
        where 1 = 1
        <if test='searchValue != null and !searchValue.equals("")'>
            AND ${searchType} LIKE CONCAT('%',#{searchValue},'%')
        </if>
        <if test='bookBorrowAvailable != null and !bookBorrowAvailable.equals("ALL")'>
            and find_book_view.book_borrow_available = #{bookBorrowAvailable}
        </if>
        <if test='bookCateName != null and !bookCateName.equals("noCate")'>
            and book_cate_name = #{bookCateName}
        </if>
        <if test='bookMidCateName != null and !bookMidCateName.equals("noMidCate")'>
            and book_mid_cate_name = #{bookMidCateName}
        </if>
        LIMIT ${displayDataCnt} offset ${(displayDataCnt) * (nowPage - 1)}
    </select>

    <!--    책 갯수-->
    <select id="selectFindBookCnt" resultType="int">
        select count(*)
        from find_book_view
        where
        1 = 1
        <if test='searchValue != null and !searchValue.equals("")'>
            and ${searchType} LIKE CONCAT('%',#{searchValue},'%')
        </if>
        <if test='bookBorrowAvailable != null and !bookBorrowAvailable.equals("ALL")'>
            and find_book_view.book_borrow_available = #{bookBorrowAvailable}
        </if>
        <if test='bookCateName != null and !bookCateName.equals("noCate")'>
            and book_cate_name = #{bookCateName}
        </if>
        <if test='bookMidCateName != null and !bookMidCateName.equals("noMidCate")'>
            and book_mid_cate_name = #{bookMidCateName}
        </if>
    </select>

    <select id="findBookOne" resultMap="findBook">
        SELECT *
        FROM find_book_view
        WHERE book_code = #{bookCode}
    </select>

<!--    대출많은책 10권찾기-->
    <select id="manyRentBook" resultMap="findBook">
        SELECT
        find_book_view.BOOK_CODE,
        BOOK_TITLE,
        BOOK_WRITER,
        BOOK_PUB,
        BOOK_YEAR,
        book_info.BOOK_BORROW_AVAILABLE,
        book_info.book_intro,
        book_info.BOOK_INFO_ATTACHED_FILE_NAME,
        BOOK_CATE_NAME,
        BOOK_MID_CATE_NAME,
        book_info.BOOK_REGDATE
        FROM find_book_view INNER JOIN book_info
        ON find_book_view.BOOK_CODE = book_info.BOOK_CODE
        ORDER by book_info.BOOK_BORROW_CNT desc
        LIMIT 37;
    </select>


<!--    새로 들러온 책 리스트-->
    <select id="selectNewBookList" resultMap="findBook">
        SELECT
            find_book_view.BOOK_CODE,
            BOOK_TITLE,
            BOOK_WRITER,
            BOOK_PUB,
            BOOK_YEAR,
            book_info.BOOK_BORROW_AVAILABLE,
            book_info.book_intro,
            book_info.BOOK_INFO_ATTACHED_FILE_NAME,
            BOOK_CATE_NAME,
            BOOK_MID_CATE_NAME,
            book_info.BOOK_REGDATE
        FROM find_book_view INNER JOIN book_info
        ON find_book_view.BOOK_CODE = book_info.BOOK_CODE
        where 1 = 1
        <if test='searchDate != null and !searchDate.equals("")'>
            and DATE_FORMAT(find_book_view.BOOK_REGDATE, '%Y-%m-%d') >= #{searchDate}
        </if>
        <if test='bookBorrowAvailable != null and !bookBorrowAvailable.equals("ALL") and !bookBorrowAvailable.equals("")'>
            and find_book_view.book_borrow_available = #{bookBorrowAvailable}
        </if>
        <if test='bookCateName != null and !bookCateName.equals("noCate") and !bookCateName.equals("")'>
            and book_cate_name = #{bookCateName}
        </if>
        <if test='bookMidCateName != null and !bookMidCateName.equals("noMidCate") and !bookMidCateName.equals("")'>
            and book_mid_cate_name = #{bookMidCateName}
        </if>
        ORDER by book_info.BOOK_REGDATE desc
        LIMIT ${displayDataCnt} offset ${(displayDataCnt) * (nowPage - 1)}
    </select>

    <!--    새로 들어온 책 갯수-->
    <select id="selectNewBookCnt" resultType="int">
        select count(*)
        from find_book_view
        where
        1 = 1
        <if test='searchDate != null and !searchDate.equals("")'>
            and DATE_FORMAT(find_book_view.BOOK_REGDATE, '%Y-%m-%d') >= #{searchDate}
        </if>
        <if test='bookBorrowAvailable != null and !bookBorrowAvailable.equals("ALL") and !bookBorrowAvailable.equals("")'>
            and find_book_view.book_borrow_available = #{bookBorrowAvailable}
        </if>
        <if test='bookCateName != null and !bookCateName.equals("noCate") and !bookCateName.equals("")'>
            and book_cate_name = #{bookCateName}
        </if>
        <if test='bookMidCateName != null and !bookMidCateName.equals("noMidCate") and !bookMidCateName.equals("")'>
            and book_mid_cate_name = #{bookMidCateName}
        </if>
    </select>

<!--    추천한책 목록 불러오기-->
    <select id="recommendedBookList" resultMap="findBookMapper.findBook">
        select *
        from find_book_view
        where 1 = 1
        <if test='userType != null and !userType.equals("") and !userType.equals("all")'>
            and USER_TYPE = #{userType}
        </if>
        <if test='userType.equals("all") or userType == null or userType.equals("")'>
            AND USER_TYPE IS not NULL
            AND USER_TYPE != ''
        </if>
    </select>


<!--    프로시저 쓸줄 몰라써 쓰는 update문입니다 쓰지마십쇼-->
    <update id="changeRegDate">
        UPDATE book_info
        SET BOOK_REGDATE = DATE_SUB(BOOK_REGDATE, INTERVAL #{bookInfoNum} DAY)
        WHERE book_info_num = #{bookInfoNum}
    </update>
    <!--    프로시저 쓸줄 몰라써 쓰는 update문입니다 쓰지마십쇼2-->
    <select id="changeRegDate2" resultType="int">
        select book_info_num
        from book_info
    </select>

    <!-- /////////////////////////////// 예약 /////////////////////////////////   -->

    <!-- 책 예약(대출 중이 아닌 책) -->
    <insert id="bookReservationFetch1">
        INSERT INTO BOOK_RESERVATION (
            USER_CODE
            , BOOK_CODE
            , RESERVE_DATE
            , RESERVE_CANCEL
            , RESERVE_STATUS
        ) VALUES (
            #{userCode}
            , #{bookCode}
            , NOW()
            , DATE_ADD(NOW(), INTERVAL +3 DAY)
            , '대기중'
        )
    </insert>

    <!-- 책 예약(대출 중인 책) -->
    <insert id="bookReservationFetch2">
        INSERT INTO BOOK_RESERVATION (
            USER_CODE
            , BOOK_CODE
            , RESERVE_DATE
            , RESERVE_STATUS
        ) VALUES (
            #{userCode}
            , #{bookCode}
            , NOW()
            , '대기중'
        )
    </insert>

    <!-- 중복 예약 방지 -->
    <select id="selectDuplication" resultType="int">
        SELECT COUNT(*)
        FROM BOOK_RESERVATION
        WHERE USER_CODE = #{userCode}
        AND BOOK_CODE = #{bookCode}
    </select>

    <!-- /////////////////////////////////////////////////////////////////////   -->
</mapper>































