<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="boardMapper">
    <resultMap id="board" type="com.green.Library.web.board.vo.BoardVO">
        <id column="BOARD_NUM"          property="boardNum"/>
        <result column="BOARD_TITLE"    property="boardTitle"/>
        <result column="CONTENT"        property="content"/>
        <result column="BOARD_DATE"     property="boardDate"/>
        <result column="USER_CODE"      property="userCode"/>
        <result column="BOARD_CNT"      property="boardCnt"/>
        <result column="BOARD_TYPE"     property="boardType"/>
        <association property="plusVO" resultMap="plus"/>
        <association property="applyVO" resultMap="memberMapper.apply"/>
        <association property="askAndAnswerBoardVO" resultMap="participationForumMapper.askAndAnswerBoardVO" />
        <association property="memberVO" resultMap="memberMapper.users"/>
        <association property="movieVO" resultMap="movie"/>
        <collection property="fileList" resultMap="file"/>
    </resultMap>

    <resultMap id="plus" type="com.green.Library.web.board.vo.PlusVO">
        <id column="PLUS_CODE"          property="plusCode"/>
        <result column="TEACHER"        property="teacher"/>
        <result column="TARGET"         property="target"/>
        <result column="OPEN_DATE"      property="openDate"/>
        <result column="CLOSE_DATE"     property="closeDate"/>
        <result column="TO_DATE"        property="toDate"/>
        <result column="FROM_DATE"      property="fromDate"/>
        <result column="PERSONNEL"      property="personnel"/>
        <result column="MAXIMUM_PERSON" property="maximumPerson"/>
        <result column="EVENT_STATUS"   property="eventStatus"/>
        <result column="BOARD_NUM"      property="boardNum"/>
    </resultMap>


    <resultMap id="file" type="com.green.Library.web.board.vo.UploadVO">
        <id column="ATTACHED_CODE" property="attachedCode"/>
        <result column="ORIGIN_FILE_NAME" property="originFileName"/>
        <result column="ATTACHED_FILE_NAME" property="attachedFileName"/>
        <result column="IS_MAIN" property="isMain"/>
        <result column="BOARD_NUM" property="boardNum"/>
    </resultMap>

    <resultMap id="movie" type="com.green.Library.web.board.vo.MovieVO">
        <id column="MOVIE_NAME" property="movieName"/>
        <result column="MOVIE_DAY" property="movieDay"/>
        <result column="FILM_RATING" property="filmRating"/>
        <result column="MOVIE_START" property="movieStart"/>
        <result column="MOVIE_END" property="movieEnd"/>
        <result column="BOARD_NUM" property="boardNum"/>
    </resultMap>



<!--  //////////////////// 기본 게시글 /////////////////  -->
    <!--  게시글 작성   -->
    <!--  등록한 게시물 정보 리스트  -->
    <select id="selectBoardList" resultMap="boardMapper.board">
        SELECT
            BOARD.BOARD_NUM
            , BOARD_TITLE
            , CONTENT
            , DATE_FORMAT(BOARD_DATE, '%Y-%m-%d') AS BOARD_DATE
            , BOARD.USER_CODE
            , BOARD_CNT
            , USER_NAME
            , ATTACHED_CODE
            , ORIGIN_FILE_NAME
            , ATTACHED_FILE_NAME
            , IS_MAIN
            , BOARD_TYPE
        FROM board INNER JOIN USERS
        ON BOARD.USER_CODE = USERS.USER_CODE
        INNER JOIN ATTACHED_FILE AS FILE
        ON BOARD.BOARD_NUM = FILE.BOARD_NUM
        WHERE BOARD_TYPE = #{boardType}
        <if test='searchValue != null and !searchValue.equals("")'>
            AND ${searchType} LIKE CONCAT('%', #{searchValue} , '%')
        </if>
        <if test='fromDate != null and !fromDate.equals("")'>
            AND DATE_FORMAT(BOARD_DATE, '%Y-%m-%d') = #{fromDate}
        </if>
        <if test='toDate != null and !toDate.equals("")'>
            AND DATE_FORMAT(BOARD_DATE, '%Y-%m-%d') = #{toDate}
        </if>
        ORDER BY BOARD_NUM DESC
        LIMIT ${displayDataCnt} OFFSET ${displayDataCnt * (nowPage - 1)}
    </select>


    <insert id="insertCulBoard">
        INSERT INTO BOARD(
            BOARD_TITLE
            , CONTENT
            , BOARD_DATE
            , BOARD_TYPE
            , USER_CODE
            , BOARD_CNT
            , BOARD_NUM
        )
        VALUES(
            #{boardTitle}
            ,#{content}
            ,#{boardDate}
            ,#{boardType}
            ,#{userCode}
            ,#{boardCnt}
            ,#{boardNum}
        )
    </insert>


    <!--  이미지 등록  -->
    <insert id="insertFileList">
        INSERT INTO ATTACHED_FILE(
            ORIGIN_FILE_NAME
            ,ATTACHED_FILE_NAME
            ,IS_MAIN
            ,BOARD_NUM
        )
        VALUES
        <foreach collection="fileList" item="file" separator=",">
            (#{file.originFileName}
            ,#{file.attachedFileName}
            ,#{file.isMain}
            ,#{file.boardNum})
        </foreach>
    </insert>

    <!--  게시판 개수 + 1  -->
    <select id="isNullBoardNo" resultType="int">
        SELECT CASE WHEN
        MAX(BOARD_NUM) IS NULL
        THEN 1
        ELSE MAX(BOARD_NUM) + 1
        END
        FROM BOARD
    </select>


    <!--  게시판 개수  -->
    <select id="countBoard" resultType="int">
        SELECT COUNT (BOARD_NUM)
        FROM BOARD
        where board_type = #{boardType}
    </select>


    <!--  게시물 상세보기  -->
    <select id="selectBoardDetail" resultMap="board">
        SELECT
            BOARD.BOARD_NUM
            ,BOARD.USER_CODE
            ,BOARD_TITLE
            ,DATE_FORMAT(BOARD_DATE, '%Y-%m-%d') AS BOARD_DATE
            ,BOARD_CNT
            ,CONTENT
            ,USER_ID
            ,ATTACHED_FILE_NAME
            ,IS_MAIN
        FROM BOARD
        INNER JOIN USERS
        ON BOARD.USER_CODE = USERS.USER_CODE
        INNER JOIN ATTACHED_FILE AS FILE
        ON BOARD.BOARD_NUM = FILE.BOARD_NUM
        WHERE BOARD.BOARD_NUM = #{boardNum}
    </select>




    <!--  조회수 증가  -->

    <update id="boardCntUp">
        UPDATE BOARD
        SET BOARD_CNT = BOARD_CNT + 1
        WHERE BOARD_NUM
    </update>

    <!--  게시판 삭제  -->
    <delete id="deleteBoard">
        DELETE FROM BOARD
        WHERE BOARD_NUM = #{boardNum}
    </delete>

    <!--  게시판 수정  -->
    <update id="updateBoard">
        UPDATE BOARD
        SET
        BOARD_TITLE = #{boardTitle}
        ,CONTENT = #{content}
        WHERE BOARD_NUM = #{boardNum}
    </update>

    <delete id="selectDeletes">
        DELETE
        FROM BOARD
        WHERE BOARD_NUM IN
        <foreach collection="boardNums" item="boardNum" separator="," open="(" close=")">
            #{boardNum}
        </foreach>
    </delete>

    <delete id="selectBPDeletes">
        DELETE
        FROM BOARD_PLUS
        WHERE BOARD_NUM IN
        <foreach collection="boardNums" item="boardNum" separator="," open="(" close=")">
            #{boardNum}
        </foreach>
    </delete>

    <delete id="selectDeleteFiles">
        DELETE
        FROM ATTACHED_FILE
        WHERE BOARD_NUM IN
        <foreach collection="boardNums" item="boardNum" separator="," open="(" close=")">
            #{boardNum}
        </foreach>
    </delete>

    <select id="selectPlusList" resultMap="board">
        SELECT
            PLUS_CODE
            ,B.BOARD_NUM
            ,BOARD_TITLE
            ,BOARD_TYPE
            ,TEACHER
            ,TARGET
            , DATE_FORMAT(OPEN_DATE, '%Y-%m-%d') AS OPEN_DATE
            , DATE_FORMAT(CLOSE_DATE, '%Y-%m-%d') AS CLOSE_DATE
            , DATE_FORMAT(TO_DATE, '%Y-%m-%d') AS TO_DATE
            , DATE_FORMAT(FROM_DATE, '%Y-%m-%d') AS FROM_DATE
            ,PERSONNEL
            ,MAXIMUM_PERSON
            ,EVENT_STATUS
        FROM BOARD AS B
        INNER JOIN BOARD_PLUS AS P
        ON B.BOARD_NUM = P.BOARD_NUM
        WHERE BOARD_TYPE = #{boardType}
        <if test='searchValue != null and !searchValue.equals("")'>
            AND ${searchType} LIKE CONCAT('%', #{searchValue} , '%')
        </if>
        <if test='fromDate != null and !fromDate.equals("")'>
            AND DATE_FORMAT(FROM_DATE, '%Y-%m-%d') = #{fromDate}
        </if>
        <if test='toDate != null and !toDate.equals("")'>
            AND DATE_FORMAT(TO_DATE, '%Y-%m-%d') = #{toDate}
        </if>
        ORDER BY EVENT_STATUS DESC , BOARD_NUM DESC
        LIMIT ${displayDataCnt} OFFSET ${displayDataCnt * (nowPage - 1)}
    </select>

    <select id="applyBoardList" resultMap="board">
        SELECT
        PLUS_CODE
        ,B.BOARD_NUM
        ,BOARD_TITLE
        , BOARD_TYPE
        ,TEACHER
        ,TARGET
        , DATE_FORMAT(OPEN_DATE, '%Y-%m-%d') AS OPEN_DATE
        , DATE_FORMAT(CLOSE_DATE, '%Y-%m-%d') AS CLOSE_DATE
        , DATE_FORMAT(TO_DATE, '%Y-%m-%d') AS TO_DATE
        , DATE_FORMAT(FROM_DATE, '%Y-%m-%d') AS FROM_DATE
        ,PERSONNEL
        ,MAXIMUM_PERSON
        ,EVENT_STATUS
        ,DATE_FORMAT(A.APPLY_DATE, '%Y-%m-%d') AS APPLY_DATE
        ,A.USER_CODE
        ,APPLY_STATUS
        ,U.USER_NAME
        FROM BOARD AS B
        INNER JOIN BOARD_PLUS AS P
        ON B.BOARD_NUM = P.BOARD_NUM
        INNER JOIN apply AS A
        ON B.BOARD_NUM = A.BOARD_NUM
        INNER JOIN USERS AS U
        ON A.USER_CODE = U.USER_CODE
        WHERE APPLY_STATUS = '신청대기'
    </select>

    <insert id="insertParticipation">
        INSERT INTO BOARD(
            BOARD_TITLE
            ,BOARD_TYPE
            ,CONTENT
            ,BOARD_NUM
        )VALUES(
            #{boardTitle}
            ,#{boardType}
            ,#{content}
            ,#{boardNum}
        )
    </insert>
    <insert id="insertParticipationPlus">
        INSERT INTO BOARD_PLUS(
            TEACHER
            ,OPEN_DATE
            ,CLOSE_DATE
            ,TO_DATE
            ,FROM_DATE
            ,TARGET
            ,PERSONNEL
            ,MAXIMUM_PERSON
            ,EVENT_STATUS
            ,BOARD_NUM
        )VALUES(
            #{plusVO.teacher}
            ,#{plusVO.openDate}
            ,#{plusVO.closeDate}
            ,#{plusVO.toDate}
            ,#{plusVO.fromDate}
            ,#{plusVO.target}
            ,#{plusVO.personnel}
            ,#{plusVO.maximumPerson}
            ,#{plusVO.eventStatus}
            ,#{boardNum}
        )
    </insert>

    <!--  첨부파일 등록  -->
    <insert id="insertEventFileList">
        INSERT INTO ATTACHED_FILE(
            ORIGIN_FILE_NAME
            ,ATTACHED_FILE_NAME
            ,BOARD_NUM
        )
        VALUES
        <foreach collection="fileList" item="file" separator=",">
            (#{file.originFileName}
            ,#{file.attachedFileName}
            ,#{file.boardNum})
        </foreach>
    </insert>

    <!--  이벤트 상세보기   -->
    <select id="selectEventBoardDetail" resultMap="board">
        SELECT
            PLUS_CODE
            ,B.BOARD_NUM
            ,BOARD_TITLE
            ,BOARD_TYPE
            ,TEACHER
            ,TARGET
            , DATE_FORMAT(OPEN_DATE, '%Y-%m-%d') AS OPEN_DATE
            , DATE_FORMAT(CLOSE_DATE, '%Y-%m-%d') AS CLOSE_DATE
            , DATE_FORMAT(TO_DATE, '%Y-%m-%d') AS TO_DATE
            , DATE_FORMAT(FROM_DATE, '%Y-%m-%d') AS FROM_DATE
            ,PERSONNEL
            ,MAXIMUM_PERSON
            ,EVENT_STATUS
            ,ATTACHED_FILE_NAME
            ,CONTENT
            ,ORIGIN_FILE_NAME
        FROM BOARD AS B
        INNER JOIN BOARD_PLUS AS P
        ON B.BOARD_NUM = P.BOARD_NUM
        INNER JOIN ATTACHED_FILE AS F
        ON B.BOARD_NUM = F.BOARD_NUM
        WHERE B.BOARD_NUM = #{boardNum}
    </select>
    <!--  이벤트 게시물 수정  -->
    <update id="updateEventBoardDetail">
        UPDATE BOARD INNER JOIN BOARD_PLUS
        ON BOARD.BOARD_NUM = BOARD_PLUS.BOARD_NUM
        SET
            BOARD_TITLE = #{boardTitle}
            ,TEACHER = #{plusVO.teacher}
            ,TARGET = #{plusVO.target}
            ,OPEN_DATE = #{plusVO.openDate}
            ,CLOSE_DATE = #{plusVO.closeDate}
            ,TO_DATE = #{plusVO.toDate}
            ,FROM_DATE = #{plusVO.fromDate}
            ,MAXIMUM_PERSON = #{plusVO.maximumPerson}
            ,CONTENT = #{content}
        WHERE BOARD.BOARD_NUM = #{boardNum}
    </update>

    <!--  이벤트 게시물 삭제  -->
    <delete id="eventBoardDelete">
        DELETE
        FROM BOARD
        WHERE BOARD_NUM = #{boardNum}
    </delete>
    <delete id="eventBPDelete">
        DELETE
        FROM BOARD_PLUS
        WHERE BOARD_NUM = #{boardNum}
    </delete>
    <delete id="eventFileDelete">
        DELETE
        FROM ATTACHED_FILE
        WHERE BOARD_NUM = #{boardNum}
    </delete>

    <update id="updateStatus">
        UPDATE board_plus AS A
        SET
        EVENT_STATUS =
        (SELECT
            CASE
                WHEN OPEN_DATE &gt; NOW() THEN '진행예정'
                WHEN OPEN_DATE &lt;= NOW() AND CLOSE_DATE &gt;= NOW() THEN '진행중'
                WHEN CLOSE_DATE &lt; NOW() THEN '진행마감'
            END
        FROM board_plus AS B
        WHERE B.PLUS_CODE = A.PLUS_CODE)
    </update>

    <update id="upPersonnel">
    UPDATE BOARD_PLUS AS BP
    INNER JOIN APPLY AS A
    ON BP.BOARD_NUM = A.BOARD_NUM
    SET BP.PERSONNEL = BP.PERSONNEL + 1
        , A.APPLY_STATUS = '승인완료'
    WHERE A.BOARD_NUM = #{boardNum}
    </update>

    <select id="applyCheck" resultType="int">
        SELECT
        COUNT(*)
        FROM apply
        WHERE BOARD_NUM = #{boardNum}
        AND USER_CODE = #{userCode};
    </select>

    <select id="selectMovieList" resultMap="board">
        SELECT
            MOVIE_NAME
            , DATE_FORMAT(MOVIE_DAY, '%Y-%m-%d') AS MOVIE_DAY
            , FILM_RATING
            , DATE_FORMAT(MOVIE_START, '%H:%i') AS MOVIE_START
            , DATE_FORMAT(MOVIE_END, '%H:%i') AS MOVIE_END
            , ORIGIN_FILE_NAME
            , ATTACHED_FILE_NAME
            , M.BOARD_NUM
        FROM BOARD AS B
        INNER JOIN MOVIE AS M
        ON B.BOARD_NUM = M.BOARD_NUM
        INNER JOIN ATTACHED_FILE AS F
        ON B.BOARD_NUM = F.BOARD_NUM
        <if test='searchValue != null and !searchValue.equals("")'>
            AND ${searchType} LIKE CONCAT('%', #{searchValue} , '%')
        </if>
        <if test='fromDate != null and !fromDate.equals("")'>
            AND DATE_FORMAT(MOVIE_DAY, '%Y-%m-%d') = #{fromDate}
        </if>
        <if test='toDate != null and !toDate.equals("")'>
            AND DATE_FORMAT(MOVIE_DAY, '%Y-%m-%d') = #{toDate}
        </if>
        ORDER BY B.BOARD_NUM DESC
        LIMIT ${displayDataCnt} OFFSET ${displayDataCnt * (nowPage - 1)}
    </select>

    <insert id="insertMovieBoard">
        INSERT INTO BOARD(
            CONTENT
            , BOARD_TITLE
            , BOARD_NUM
            , BOARD_TYPE
        ) VALUES(
            #{content}
            ,#{boardTitle}
            ,#{boardNum}
            ,#{boardType}
        )
    </insert>
    <insert id="insertMovie">
        INSERT INTO MOVIE(
            MOVIE_NAME
            ,MOVIE_DAY
            ,FILM_RATING
            ,MOVIE_START
            ,MOVIE_END
            ,BOARD_NUM
        ) VALUES(
            #{movieVO.movieName}
            ,#{movieVO.movieDay}
            ,#{movieVO.filmRating}
            ,#{movieVO.movieStart}
            ,#{movieVO.movieEnd}
            ,#{boardNum}
        )
    </insert>
    <insert id="insertMovieFile">
        INSERT INTO ATTACHED_FILE(
            ORIGIN_FILE_NAME
            ,ATTACHED_FILE_NAME
            ,BOARD_NUM
        ) VALUES
        <foreach collection="fileList" item="file" separator=",">
            (#{file.originFileName}
            ,#{file.attachedFileName}
            ,#{file.boardNum})
        </foreach>

    </insert>
    <select id="selectMovieDetail" resultMap="board">
        SELECT
            MOVIE_NAME
            , DATE_FORMAT(MOVIE_DAY, '%Y-%m-%d') AS MOVIE_DAY
            , FILM_RATING
            , DATE_FORMAT(MOVIE_START, '%H:%i') AS MOVIE_START
            , DATE_FORMAT(MOVIE_END, '%H:%i') AS MOVIE_END
            , ORIGIN_FILE_NAME
            , ATTACHED_FILE_NAME
            , CONTENT
            , B.BOARD_NUM
        FROM BOARD AS B
        INNER JOIN MOVIE AS M
        ON B.BOARD_NUM = M.BOARD_NUM
        INNER JOIN ATTACHED_FILE AS F
        ON B.BOARD_NUM = F.BOARD_NUM
        WHERE M.BOARD_NUM = #{boardNum}
    </select>
    <update id="updateMovie">
        UPDATE BOARD INNER JOIN MOVIE
        ON BOARD.BOARD_NUM = MOVIE.BOARD_NUM
        SET
            MOVIE_NAME = #{movieVO.movieName}
            , MOVIE_DAY = #{movieVO.movieDay}
            , FILM_RATING = #{movieVO.filmRating}
            , MOVIE_START = #{movieVO.movieStart}
            , MOVIE_END = #{movieVO.movieEnd}
            , CONTENT = #{content}
        WHERE BOARD.BOARD_NUM = #{boardNum}
    </update>
    <update id="updateFile">
        UPDATE ATTACHED_FILE
        SET
            ORIGIN_FILE_NAME  = #{originFileName}
            , ATTACHED_FILE_NAME = #{attachedFileName}
        WHERE ATTACHED_FILE.BOARD_NUM = #{boardNum}
    </update>
    <delete id="movieDelete">
        DELETE
        FROM MOVIE
        WHERE BOARD_NUM = #{boardNum}
    </delete>









<!--  ////////////////////////이벤트 게시물///////////////////  -->

</mapper>































