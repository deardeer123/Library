<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="libraryBookMapper">

    <resultMap id="libraryBook" type="com.green.Library.libraryBook.vo.LibraryBookVO">
        <id column="BOOK_CODE" property="bookCode" />
        <result column="BOOK_TITLE" property="bookTitle" />
        <result column="BOOK_WRITER" property="bookWriter" />
        <result column="BOOK_PUB" property="bookPub" />
        <result column="BOOK_YEAR" property="bookYear" />
        <association property="libraryBookInfoVO" resultMap="LibraryBookInfo" />
        <association property="bookRecommendationVO" resultMap="BookRecommendation" />
    </resultMap>

    <resultMap id="LibraryCate" type="com.green.Library.libraryBook.vo.LibraryBookCategoryVO" >
        <id column="BOOK_CATE_CODE" property="bookCateCode" />
        <result column="BOOK_CATE_NAME" property="bookCateName"/>
        <result column="BOOK_CATE_INDEX" property="bookCateIndex"/>
        <collection property="libraryBookMidCategoryVOList" resultMap="LibraryMidCate"/>
    </resultMap>

    <resultMap id="LibraryMidCate" type="com.green.Library.libraryBook.vo.LibraryBookMidCategoryVO">
        <id column="BOOK_MID_CATE_CODE" property="bookMidCateCode" />
        <result column="BOOK_MID_CATE_NAME" property="bookMidCateName"/>
        <result column="BOOK_MID_CATE_INDEX" property="bookMidCateIndex"/>
        <result column="BOOK_CATE_CODE" property="bookCateCode"/>
    </resultMap>

    <resultMap id="LibraryBookInfo" type="com.green.Library.libraryBook.vo.LibraryBookInfoVO">
        <id column="BOOK_INFO_NUM" property="bookInfoNum"/>
        <result column="BOOK_INFO_ATTACHED_FILE_NAME" property="bookInfoAttachedFileName" />
        <result column="BOOK_INFO_ORIGIN_FILE_NAME" property="bookInfoOriginFileName" />
        <result column="BOOK_BORROW_AVAILABLE" property="bookBorrowAvailable" />
        <result column="BOOK_BORROW_CNT" property="bookBorrowCnt" />
        <result column="BOOK_INTRO" property="bookIntro" />
        <result column="BOOK_REGDATE" property="bookRegTime"/>
        <result column="BOOK_CATE_CODE" property="bookCateCode" />
        <result column="BOOK_MID_CATE_CODE" property="bookMidCateCode"/>
        <result column="BOOK_CODE" property="bookCode" />
    </resultMap>

    <resultMap id="LibraryBookBreakage" type="com.green.Library.libraryBook.vo.LibraryBookBreakageVO">
        <id column="BOOK_CODE" property="bookCode" />
        <result column="BOOK_TITLE" property="bookTitle" />
        <result column="BOOK_WRITER" property="bookWriter" />
        <result column="BOOK_PUB" property="bookPub" />
        <result column="BOOK_YEAR" property="bookYear" />
        <association property="libraryBookBreakageInfoVO" resultMap="LibraryBookBreakageInfo" />
    </resultMap>

    <resultMap id="LibraryBookBreakageInfo" type="com.green.Library.libraryBook.vo.LibraryBookBreakageInfoVO">
        <id column="BOOK_INFO_NUM" property="bookInfoNum"/>
        <result column="BOOK_INFO_ATTACHED_FILE_NAME" property="bookInfoAttachedFileName" />
        <result column="BOOK_INFO_ORIGIN_FILE_NAME" property="bookInfoOriginFileName" />
        <result column="BOOK_BORROW_AVAILABLE" property="bookBorrowAvailable" />
        <result column="BOOK_BORROW_CNT" property="bookBorrowCnt" />
        <result column="BOOK_INTRO" property="bookIntro" />
        <result column="BOOK_REGDATE" property="bookRegTime"/>
        <result column="BOOK_CATE_CODE" property="bookCateCode" />
        <result column="BOOK_MID_CATE_CODE" property="bookMidCateCode"/>
        <result column="BOOK_CODE" property="bookCode" />
    </resultMap>

    <resultMap id='BookRecommendation' type="com.green.Library.libraryBook.vo.BookRecommendationVO">
        <id column="ID" property="id" />
        <result column="BOOK_CODE" property="bookCode"/>
        <result column="USER_TYPE" property="userType"/>
    </resultMap>




<!--    제일 큰 값 구하기-->
    <select id="searchMaxCode" resultType="String">
        SELECT CONCAT('GR',LPAD( (SELECT MAX(CAST(SUBSTRING((BOOK_CODE),3) AS INT)+1) FROM book) , 10 ,'0'))
    </select>
<!--    카테고리 목록 구하기-->
    <select id="selectCateList" resultMap="LibraryCate">
        select
        BOOK_CATEGORY.BOOK_CATE_CODE ,
        BOOK_CATE_NAME ,
        BOOK_CATE_INDEX ,
        BOOK_MID_CATE_CODE ,
        BOOK_MID_CATE_NAME ,
        BOOK_MID_CATE_INDEX
        from
        BOOK_CATEGORY INNER JOIN BOOK_MID_CATEGORY
        ON BOOK_CATEGORY.BOOK_CATE_CODE = BOOK_MID_CATEGORY.BOOK_CATE_CODE
    </select>

<!--    카테고리 하나 찾기 중분류-->
    <select id="selectCateOne" resultMap="LibraryCate">
        select
        BOOK_CATEGORY.BOOK_CATE_CODE ,
        BOOK_CATE_NAME ,
        BOOK_CATE_INDEX ,
        BOOK_MID_CATE_CODE ,
        BOOK_MID_CATE_NAME ,
        BOOK_MID_CATE_INDEX
        from
        BOOK_CATEGORY INNER JOIN BOOK_MID_CATEGORY
        ON BOOK_CATEGORY.BOOK_CATE_CODE = BOOK_MID_CATEGORY.BOOK_CATE_CODE
        where
        BOOK_CATEGORY.BOOK_CATE_CODE = #{bookCateCode}
    </select>

<!--    책 추천등록하기-->
    <insert id="insertBookRecommendation">
        INSERT INTO BOOK_RECOMMENDATION(
        BOOK_CODE ,
        USER_TYPE
        ) VALUES
            (
                #{bookCode},
                #{userType}
            )
    </insert>

<!--    책 추천 변경 및 취소하기-->
    <update id="updateBookRecommendation">
        UPDATE BOOK_RECOMMENDATION
        SET
            USER_TYPE= #{userType}
        WHERE
            BOOK_CODE = #{bookCode}
    </update>

<!--    책 추천 변경 및 취소 하기 전 이미 등록되어 있는지 확인 하는 sql-->
    <select id="chkBookRecommendation" resultType="boolean">
        select
            case
                when count(*) = 0 then false
                else true
            end
        from
            book_recommendation
        where
            book_code = #{bookCode}
    </select>

<!--    추천된 책 여러개 찾기-->
<!--    만약에 들어온 userType이 all 인경우는 다 검색해야함.,-->
    <select id="selectBookRecommendation" resultMap="findBookMapper.findBook">
        select *
        from find_book_view
        where 1 = 1
        <if test='userType != null and !userType.equals("not") and !userType.equals("all")'>
            and USER_TYPE = #{userType}
        </if>
        <if test='userType.equals("all")'>
            AND USER_TYPE IS not NULL
            AND USER_TYPE != ''
        </if>
    </select>

<!--    북코드를 통해서 userType만 찾기-->
    <select id="selectBookRecommendationUserType" resultType="String">
        select
            user_type
        from
            book_recommendation
        where
            book_code = #{bookCode}
    </select>



</mapper>






























